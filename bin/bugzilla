#!/usr/bin/env python

# bugzilla - a command line interface to Bugzilla
# Copyright (C) 2011 Benon Technologies Pty Ltd, Fraser Tweedale
#
# bugzillatools is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


import argparse
import sys

import bzlib.bugzilla
import bzlib.command
import bzlib.config
import bzlib.ui

# process user-defined aliases
aliases = bzlib.config.get('alias')
if aliases:
    for i, arg in enumerate(sys.argv[1:], 1):
        if arg in aliases:
            sys.argv[i:i+1] = aliases[arg].split()
            break

# format the epilogue
epilog = None
if aliases:
    lines = map(
        lambda (alias, target): "    {:20}{}".format(alias, target),
        aliases.viewitems()
    )
    epilog = 'user-defined aliases:\n' + '\n'.join(lines)

# create an argument parser
parser = argparse.ArgumentParser(
    description='Interact with Bugzilla servers.',
    epilog=epilog,
    formatter_class=argparse.RawDescriptionHelpFormatter
)

# add global arguments
parser.add_argument('--version', action='version',
    version='%(prog)s {}'.format(bzlib.version))
parser.add_argument('--server', default=bzlib.config.get('default_server'),
    help='Handle of Bugzilla instance to use')
parser.add_argument('--url', help='Base URL of Bugzilla instance')
parser.add_argument('--user', help='Bugzilla username')
parser.add_argument('--password', help='Bugzilla password')

subparsers = parser.add_subparsers(title='subcommands')

# add subcommands
for command in bzlib.command.commands:
    command_parser = subparsers.add_parser(
        command.__name__.lower(),
        help=command.__doc__
    )
    map(lambda x: x(command_parser), command.args)
    command_parser.set_defaults(command=command)

# parse args
args = parser.parse_args()

# construct the Bugzilla object
url, user, password = args.url, args.user, args.password
if not (url and user and password):
    if not args.server:
        raise UserWarning("No server specified.")
    try:
        server = bzlib.config.get('servers').get(args.server)
    except AttributeError:
        raise UserWarning("No servers defined.")
    if not server:
        raise UserWarning("No configuration for server '" + args.server + "'.")
    url = url or server[0]
    user = user or server[1]
    password = password or server[2]

bz = bzlib.bugzilla.Bugzilla(url, user, password)

# execute command
args.command(bz, bzlib.ui.UI())(args)
